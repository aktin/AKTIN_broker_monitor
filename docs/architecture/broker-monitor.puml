@startuml
hide methods

title __Diagram of Broker-Monitor__\n

entity "<size:18>AKTIN Broker</size>" as broker
entity broker #aliceblue;line:blue;text:blue
hide broker members
hide broker circle

entity "<size:18>CONFLUENCE</size>" as confluence
entity confluence #aliceblue;line:blue;text:blue
hide confluence members
hide confluence circle

entity "JSON file with configuration" as settings {
* URL broker-server
* API Key broker-server
* Working directory of scripts
* Path to confluence template directory
* Path to confluence mapping file
* Confluence URL
* Confluence Space
* Confluence Token
* Confluence Parent Page
}
entity settings #aliceblue;line:blue;text:blue
hide settings circle

entity "JSON file with node mapping" as mapping {
* maps id of a node to its common name
* optional jira query labels can be set for id
* optional threshold for daily imports can be set for id
}
entity mapping #aliceblue;line:blue;text:blue
hide mapping circle

package "common.py" as common <<Package>> {
abstract class CSVHandler {
* operations for reading a csv file as a dataframe
or writing a dataframe to a csv
}

class InfoCSVHandler {
* generates info csv name
* knows columns of info csv
}

class ErrorCSVHandler {
* generates error csv name
* knows columns of error csv
}

class "**BrokerNodeConnection**" as BrokerNodeConnection {
* uses REST endpoint of broker-server to get
information about connected broker nodes
* Responses are converted to custom objects
* Broker connection is created on initialization
}

class "**ConfluenceConnection**" as ConfluenceConnection {
* uses Atlassian Python API to execute CRUD
operations on confluence pages
* Confluence conncetion is created on initialization
}

class "**ConfluenceNodeMapper**" as ConfluenceNodeMapper {
* loads json file with confluence node mapping
as python dictionary
}

class "load_properties_file_as_environment()" as read_properties {
* validates and loads given settings file
as python environment variables
}
hide read_properties circle
note top of read_properties: Classes with bold names need items\nfrom JSON configuration file
}

InfoCSVHandler -u-|> CSVHandler
ErrorCSVHandler -u-|> CSVHandler

BrokerNodeConnection -d--> broker
ConfluenceConnection -d--> confluence
ConfluenceNodeMapper -d--> mapping
read_properties -d--> settings

package "node_to_csv.py" as node_to_csv <<Package>> {
abstract class BrokerNodeFetcher {
* helper functions and variables to fetch broker node
information and save them in a csv file
}

class NodeInfoFetcher {
* fetches broker node last-contact, startup
and import stats into csv file
* computes daily imports and error rate from
differences to previous day
}

class NodeErrorFetcher {
* fetches broker node errors into csv file
}

class BrokerNodeResourceFetcher {
* fetches broker node resource information to text file
}

class "**BrokerNodeFetcherManager**" as BrokerNodeFetcherManager {
* main class to run broker node info fetching
* creates working dir for each connected node
* initializes and executes fetcher
}
}

BrokerNodeFetcher --> BrokerNodeConnection
BrokerNodeFetcher --> CSVHandler

NodeInfoFetcher --|> BrokerNodeFetcher
NodeErrorFetcher --|> BrokerNodeFetcher

BrokerNodeResourceFetcher --> BrokerNodeConnection

BrokerNodeFetcherManager --> BrokerNodeConnection
BrokerNodeFetcherManager ..> NodeInfoFetcher
BrokerNodeFetcherManager ..> NodeErrorFetcher
BrokerNodeFetcherManager ..> BrokerNodeResourceFetcher

package "csv_to_confluence.py" as csv_to_confluence {
abstract class TemplatePageContentWriter {
* converts confluence page template to html soup
* provides abstract method to add content to html soup
}

abstract class TemplatePageCSVWriter {
* helper class for implementing CSVWriter
to load corresponding csv as dataframe
}

class TemplatePageCSVInfoWriter {
* writes csv import stats into confluence
page template
}

class TemplatePageCSVErrorWriter {
* writes csv error stats into confluence
page template
}

class TemplatePageNodeResourceWriter {
* loads node resources from txt file and writes
information to confluence page template
}

class TemplatePageStatusChecker {
* checks and sets status light in confluence
page template
}

class TemplatePageJiraTableWriter {
* adds jira table to confluence page
template
}

class "**TemplateResourceLoader**" as TemplateResourceLoader {
* loads resources from confluence template
directory
}

class TemplatePageMigrator {
* checks confluence page for current template version
* migrates static information of confluence page to
newer template
}

class "**ConfluencePageHandler**" as ConfluencePageHandler {
* creates new pages for broker nodes on confluence
* updates content on existing broker node pages
* updates template of broker node pages to
newer version
}

class CSVBackupManager {
* uploads broker node csv files as attachement
to confluence page
}

class "**ConfluencePageHandlerManager**" as ConfluencePageHandlerManager {
* creates working environment
* initializes and executes ConfluencePageHandler
* creates csv backups on confluence
}
}

TemplatePageCSVWriter --> CSVHandler

TemplatePageCSVInfoWriter --|> TemplatePageContentWriter
TemplatePageCSVInfoWriter --|> TemplatePageCSVWriter

TemplatePageCSVErrorWriter --|> TemplatePageContentWriter
TemplatePageCSVErrorWriter --|> TemplatePageCSVWriter

TemplatePageNodeResourceWriter --|> TemplatePageContentWriter

TemplatePageStatusChecker --|> TemplatePageContentWriter
TemplatePageStatusChecker --> ConfluenceNodeMapper

TemplatePageJiraTableWriter --|> TemplatePageContentWriter
TemplatePageJiraTableWriter --> ConfluenceNodeMapper

TemplatePageMigrator --> TemplateResourceLoader

ConfluencePageHandler --> ConfluenceConnection
ConfluencePageHandler --> ConfluenceNodeMapper
ConfluencePageHandler --> TemplateResourceLoader
ConfluencePageHandler --> TemplatePageCSVInfoWriter
ConfluencePageHandler --> TemplatePageCSVErrorWriter
ConfluencePageHandler --> TemplatePageNodeResourceWriter
ConfluencePageHandler --> TemplatePageStatusChecker
ConfluencePageHandler --> TemplatePageJiraTableWriter
ConfluencePageHandler --> TemplatePageMigrator

CSVBackupManager --> ConfluenceNodeMapper
CSVBackupManager --> ConfluenceConnection

ConfluencePageHandlerManager --> ConfluenceNodeMapper
ConfluencePageHandlerManager --> ConfluenceConnection
ConfluencePageHandlerManager ..> ConfluencePageHandler
ConfluencePageHandlerManager ..> CSVBackupManager



@enduml

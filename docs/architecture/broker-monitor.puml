@startuml
hide methods

title __Diagram of Broker-Monitor__\n

skinparam linetype ortho
top to bottom direction

entity "<size:18>AKTIN Broker</size>" as broker
entity broker #aliceblue;line:blue;text:blue
hide broker members
hide broker circle

entity "<size:18>CSV</size>" as csv
entity csv #aliceblue;line:blue;text:blue
hide csv members
hide csv circle

entity "<size:18>CONFLUENCE</size>" as confluence
entity confluence #aliceblue;line:blue;text:blue
hide confluence members
hide confluence circle

entity "JSON file with configuration" as settings {
* URL broker-server
* API Key broker-server
* Working directory
* URL Confluence
* Space Confluence
* Token Confluence
}
entity settings #aliceblue;line:blue;text:blue
hide settings circle

entity "JSON file with node mapping" as mapping {
* maps id of a node to its common name
and label for jira tickets
}
entity mapping #aliceblue;line:blue;text:blue
hide mapping circle

package "node_to_csv.py" as node_to_csv <<Package>> {
class BrokerNodeFetcherManager {
* creates working directory for fetcher
* initializes and executes fetcher
}

abstract class BrokerNodeFetcher {
* helper functions and variables to fetch broker node
information and save them in a csv file
}

class NodeErrorFetcher {
* fetches broker node errors
* each column in csv file stands for one error
}

class NodeInfoFetcher {
* fetches broker node last-contact, startup and import stats
* computes daily imports and error rate from differences to previous day
* each column in csv file stands for one day
}

note "* each node has a corresponding folder\n* all csv files of a node are collected in this folder\n* csv files are rotated each year" as N1
NodeErrorFetcher .u.. N1
NodeInfoFetcher .u.. N1
}

package "common.py" as common <<Package>> {
class "load_properties_file_as_environment()" as read_properties {
* validates settings file
* loads settings as python environment variables
}
hide read_properties circle

class "load_json_file_as_dict()" as load_mapping {
* loads json file with node mapping as
python dictionary
}
hide load_mapping circle

class BrokerNodeConnection {
* uses REST endpoint of broker-server to get
information about connected broker nodes
}

class ConfluenceConnection {
* uses Atlassian Python API to execute
operations in confluence
}

class CSVHandler {
* operations for reading and writing a csv file
* contains configuration variables for reading csv file
}
}

package "csv_to_confluence.py" as csv_to_confluence {
class CSVExtractor {
* extracts rows from csv file as dictionaries
}

class CSVBackupManager {
* uploads broker node csv files as attachement
to confluence page
}

abstract class TemplateResourceHandler{
* loads file as html soup
* converts given input to html soup
}

abstract class TemplatePageLoader{
* loads confluence page template as html soup
}

class NodeResourceFetcher {
* intermediate class to extract node
resources from broker-server
}

class TemplatePageNodeResourceWriter {
* writes fetched resources from broker node
into template of confluence page
}

class TemplatePageCSVInfoWriter {
* writes csv import stats into
template of confluence page
}

class TemplatePageCSVErrorWriter {
* writes csv error stats into
template of confluence page
}

class ConfluencePageHandler {
* creates new pages for broker nodes on confluence
* updates content on existing broker node pages
* updates template of broker node pages
* fetches node information from csv and broker-server
to confluence
}

class ConfluenceHandlerManager {
* creates working environment
* initializes and executes confluence handler
* creates csv backups on confluence
}
}

read_properties --> settings
CSVHandler --> csv
BrokerNodeConnection --> broker
BrokerNodeConnection ..> settings
ConfluenceConnection --> confluence
ConfluenceConnection ..> settings

BrokerNodeFetcher --> CSVHandler
BrokerNodeFetcher --> BrokerNodeConnection
NodeInfoFetcher --|> BrokerNodeFetcher
NodeErrorFetcher --|> BrokerNodeFetcher
BrokerNodeFetcherManager ..> settings
BrokerNodeFetcherManager --> NodeInfoFetcher
BrokerNodeFetcherManager --> NodeErrorFetcher

load_mapping -u-> mapping
CSVBackupManager ..> mapping
CSVBackupManager --> ConfluenceConnection
TemplatePageLoader --|> TemplateResourceHandler
NodeResourceFetcher --> BrokerNodeConnection
TemplatePageNodeResourceWriter --|> TemplatePageLoader
TemplatePageNodeResourceWriter -> NodeResourceFetcher
CSVExtractor --> CSVHandler
TemplatePageCSVInfoWriter --|> TemplatePageLoader
TemplatePageCSVInfoWriter --> CSVExtractor
TemplatePageCSVErrorWriter --|> TemplatePageLoader
TemplatePageCSVErrorWriter --> CSVExtractor
TemplatePageCSVErrorWriter ..> settings



ConfluencePageHandler ..> mapping
ConfluencePageHandler ---> ConfluenceConnection
ConfluencePageHandler ..> settings
ConfluencePageHandler --> TemplatePageNodeResourceWriter
ConfluencePageHandler --> TemplatePageCSVInfoWriter
ConfluencePageHandler --> TemplatePageCSVErrorWriter
ConfluencePageHandler --> CSVExtractor

ConfluenceHandlerManager --> CSVBackupManager
ConfluenceHandlerManager --> ConfluencePageHandler
ConfluenceHandlerManager ..> mapping

@enduml

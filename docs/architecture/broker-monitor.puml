@startuml
hide methods

title __Diagram of Broker-Monitor__\n

package "node_to_csv.py" <<Package>> {
class "read_properties_file()" as r {
* validates settings file
* loads settings as python environment variables
}
hide r circle

class CSVHandler {
* operations for reading and writing a csv file
* contains configuration variables for reading csv file
}

class BrokerNodeConnection {
* uses REST endpoint of broker-server to get
information about connected broker nodes
}

abstract class BrokerNodeFetcher {
* helper functions and variables to fetch broker node
information and save them in a csv file
}

class NodeErrorFetcher {
* fetches broker node errors
* each column in csv file stands for one error
}

class NodeInfoFetcher {
* fetches broker node last-contact, startup and import stats
* computes daily imports and error rate from differences to previous day
* each column in csv file stands for one day
}

class BrokerNodeFetcherManager {
* creates working directory for fetcher
* initializes and executes fetcher
}

note "* each node has a corresponding folder\n* all csv files of a node are collected in this folder\n* csv files are rotated each year" as N1
NodeErrorFetcher .. N1
NodeInfoFetcher .. N1

BrokerNodeFetcher --> CSVHandler
BrokerNodeFetcher --> BrokerNodeConnection
NodeErrorFetcher --|> BrokerNodeFetcher
NodeInfoFetcher --|> BrokerNodeFetcher
BrokerNodeFetcherManager .d.> NodeInfoFetcher
BrokerNodeFetcherManager .d.> NodeErrorFetcher
}

entity "AKTIN Broker" as broker
entity broker #aliceblue;line:blue;text:blue
hide broker members
hide broker circle

entity "CSV" as csv
entity csv #aliceblue;line:blue;text:blue
hide csv members
hide csv circle

entity "JSON file with configuration" as settings {
* URL broker-server
* API Key broker-server
* Working directory
}
entity settings #aliceblue;line:blue;text:blue
hide settings circle

BrokerNodeConnection -d-> broker
CSVHandler -d-> csv
r --> settings
BrokerNodeConnection .l.> settings
BrokerNodeFetcher .l.> settings

@enduml
